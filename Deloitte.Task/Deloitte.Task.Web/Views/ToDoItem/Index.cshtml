@using Deloitte.Task.Web.Models
@model IEnumerable<ToDoItemViewModel>

@{
    ViewData["Title"] = "Index";
}

<h5>Task Lists</h5>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            @*<th>
                @Html.DisplayNameFor(model => model.Id)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.TaskName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsTaskChecked)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastUpdatedDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if(Model!=null){
@foreach (var item in Model) {
        <tr>
            @*<td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.TaskName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsTaskChecked)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastUpdatedDate)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                @*<a asp-action="Details" asp-route-id="@item.Id">Details</a> |*@
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
}
    </tbody>
</table>